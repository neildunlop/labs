AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    MemorySize: 256
    Environment:
      Variables:
        TABLE_NAME: !Ref ProjectsTable
        USER_POOL_ID: !Ref UserPool
        CLIENT_ID: !Ref UserPoolClient

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BurendoLabsUserPool
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: BurendoLabsClient
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED

  ProjectsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BurendoLabsProjects
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  ProjectsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn

  GetProjectsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: projects.getProjects
      Events:
        GetProjects:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  GetProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: projects.getProject
      Events:
        GetProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  CreateProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: projects.createProject
      Events:
        CreateProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  UpdateProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: projects.updateProject
      Events:
        UpdateProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer

  DeleteProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: projects.deleteProject
      Events:
        DeleteProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer

Outputs:
  ProjectsApi:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ProjectsApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
  ProjectsTableName:
    Description: DynamoDB table name
    Value: !Ref ProjectsTable
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient 