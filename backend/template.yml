AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${Environment}-burendo-labs-user-pool
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  # Cognito User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub ${Environment}-burendo-labs-client
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED

  # API Gateway
  ProjectsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # Lambda Functions
  GetProjectsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getProjects.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref ProjectsTable
      Events:
        GetProjects:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable

  GetProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getProject.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref ProjectsTable
      Events:
        GetProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable

  CreateProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: createProject.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref ProjectsTable
      Events:
        CreateProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable

  UpdateProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updateProject.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref ProjectsTable
      Events:
        UpdateProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable

  DeleteProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: deleteProject.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref ProjectsTable
      Events:
        DeleteProject:
          Type: Api
          Properties:
            RestApiId: !Ref ProjectsApi
            Path: /projects/{id}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable

  # DynamoDB Table
  ProjectsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-projects
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

Outputs:
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient

  ProjectsApi:
    Description: API Gateway endpoint URL
    Value: !Sub https://${ProjectsApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/ 